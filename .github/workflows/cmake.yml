name: CMake

on:
  push:
    branches: [ main, testing ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build-config: [ Release, Debug, RelWithDebInfo ]
        os: [ ubuntu-latest, windows-latest ]

    # The CMake configure and build commands are platform agnostic and should 
    # work equally well on Windows or Mac. You can convert this to a matrix 
    # build if you need cross-platform coverage. 
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Show Python version
      run: make -f ${{github.workspace}}/testmakefile.mak

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only 
      # required if you are using a single-configuration generator such as make.
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build-config }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build-config }}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ matrix.build-config }}
      
  docs:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set version
        run: echo "PROJECT_NUMBER = `git describe --tags`" >> Doxyfile
      - name: Generate Documentation
        uses: mattnotmitt/doxygen-action@v1.9.4
      - name: Publish generated content to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs/html


